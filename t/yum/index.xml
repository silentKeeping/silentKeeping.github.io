<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yum on FeixiangFu</title><link>https://silentkeeping.github.io/t/yum/</link><description>Recent content in yum on FeixiangFu</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><copyright>© 2023 FeixiangFu</copyright><lastBuildDate>Wed, 02 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://silentkeeping.github.io/t/yum/index.xml" rel="self" type="application/rss+xml"/><item><title>yum客户端的配置及yum命令用法</title><link>https://silentkeeping.github.io/2016/03/yum/</link><pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate><guid>https://silentkeeping.github.io/2016/03/yum/</guid><description>什么是yum # 我们在Linux系统上安装处理软件，一般是使用RPM，它是通过预先编译完成并且把软件打包为RPM文件格式后，再加以安装的一种方式，使用者只要拿到这个打包好的软件，然后将里头的文件放置到应该摆放的目录，这样就完成了安装。但是，由于有些软件是有依赖于其他软件的，当你要安装某个RPM类型的软件时，RPM会检验RPM软件数据库，它所依赖的相关软件包是否都已存在，如果没有检索到，那么这个RPM文件默认就不能安装。甚至是有些包之间还会存在循环依赖，这时RPM就不能快速有效的进行软件安装了。 对于RPM的上述局限性，yum的出现就解决了包之间的依赖性的问题。文章前面提到了，RPM把软件依赖关系储存在本地数据库里，那我们在安装软件的时候，如果先到数据库里找到所有依赖包的列表，再检索哪些已经安装到本地，然后把剩下没安装的一起安装，这样就可以解决包依赖性的问题了，这就是yum机制的由来
yum的运作流程 # 各版本发行商都会释放出软件并放置于yum服务器上，所以yum服务器储存有我们各种所需的软件。参考下图，yum服务器不仅存储了各种RPM包，还有包的相关的元数据文件（放置于特定目录repodata下），前面提到的包的依赖性关系就储存在元数据文件中。這些文件与RPM软件包所在的本地或网络位置就被称为yum仓库(yum repo)。当用户端有软件安装或升级的需求时，用户端会访问yum服务器下载或更新RPM软件列表并存在本机缓存列表中，然后通过缓存列表与本地RPM数据库相比对，筛选出缺少哪些RPM软件包并根据yum仓库储存的路径下载（可以是本地，也可以是网络），最后通过RPM机制一并进行安装。 如何配置yum客户端 # yum本身的配置文件，主要指向仓库的位置以及相关的各种配置信息。
主配置文件 # /etc/yum.conf：为所有仓库提供公共配置
各仓库指向的定义 # /etc/yum.repos.d/*.repo：为仓库的指向提供配置
* [repositoryID] #仓库的名字，具有唯一性，标识repo的指向 * name=Some name for this repository #仓库描述信息 * baseurl=url://path/to/repository/ #指明repo的访问路径，通常为一个文件服务器上输出的某repo #文件服务器类型 http://SEVER/PATH/TO/REPOSITORY https://SEVER/PATH/TO/REPOSITORY ftp://SEVER/PATH/TO/REPOSITORY file:///PATH/TO/REPOSITORY * enabled={1|0} #此仓库是否可被使用 * gpgcheck={1|0} #是否对RPM包做检验 * gpgkey=url://path/to/keyfile/ #指明gpgkey文件路径 * enablegroups={1|0} #是否启用包组 * failovermethod={roundrobin|priority} #设置baseurl有多个时的优先级 roundrobin：随机挑选，默认值 priority:按顺序访问 * cost= #指明仓库的访问开销，默认为1000 创建新的配置文件 # 按照以上方式，我们就在/etc/yum.</description></item></channel></rss>