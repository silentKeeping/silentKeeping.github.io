<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openssl on FeixiangFu</title><link>https://silentkeeping.github.io/t/openssl/</link><description>Recent content in openssl on FeixiangFu</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><copyright>© 2023 FeixiangFu</copyright><lastBuildDate>Wed, 08 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://silentkeeping.github.io/t/openssl/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker配置TLS安全认证</title><link>https://silentkeeping.github.io/2018/08/docker-tls/</link><pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate><guid>https://silentkeeping.github.io/2018/08/docker-tls/</guid><description>&lt;h4 class="relative group">背景
&lt;div id="背景" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e8%83%8c%e6%99%af" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h4>
&lt;blockquote>
&lt;p>通常，我们在配置docker daemon的监听方式为本地的socket和开放TCP端口，docker服务允许远程访问，方便对docker集群的主机执行管理命令及调用等。如果不使用TLS加密docker，任意客户端都可以对docker主机进行远程操作，有很大的安全隐患。而配置TLS后，只有信任的客户端才可以远程访问docker服务。&lt;/p>
&lt;/blockquote></description></item><item><title>如何使用openssl工具创建私有CA</title><link>https://silentkeeping.github.io/2016/04/openssl-ca/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>https://silentkeeping.github.io/2016/04/openssl-ca/</guid><description>CA及证书 # 非对称加密是为了保证互联网中通讯信息安全使用的一种算法，密钥是成对出现(公钥和私钥），它的特点是发送方A使用接收方B的公钥加密数据，所有只有B拥有与之配对的私钥解密该数据，反之亦然。那么，A和B之间怎么交换得到对方的真实安全的公钥呢？此时就需要一个权威的机构来验证公钥的合法性，这个机构称之为CA(Certification Authority)。CA为每个使用公开密钥的客户发放数字证书，数字证书的作用是证明证书中列出的客户合法拥有证书中列出的公开密钥。
获取证书两种方法 # 使用证书授权机构： # 生成签名请求(csr) –&amp;gt;将csr发送给CA –&amp;gt; 从CA处接收签名 。参考下图： CA证书颁发过程(假设只有一级CA) 很多权威的根CA会被内置到操作系统里面，用户安装系统之后也就会拥有根CA的公钥，所以可以获得上级CA的公钥，进而可以申请证书。参考下图：主机通过RootCA获得上级CA的公钥
自签名的证书 # OpenSSL是一个免费开源的库，它提供了构建数字证书的命令行工具，其中一些可以用来自建RootCA并签发自己的公钥
1.创建私有CA # 创建之前要了解一下openssl的配置文件： /etc/pki/tls/openssl.cnf
[ ca ] default_ca = CA_default # The default ca section &amp;lt;--启用的CA名字 [ CA_default ] dir = /etc/pki/CA # Where everything is kept &amp;lt;--相关文件存放目录 certs = $dir/certs # Where the issued certs are kept &amp;lt;--存档颁发证书文件 crl_dir = $dir/crl # Where the issued crl are kept &amp;lt;--吊销证书列表 database = $dir/index.</description></item></channel></rss>