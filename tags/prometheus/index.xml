<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>prometheus on FeixiangFu</title><link>https://fufeixiang.com/tags/prometheus/</link><description>Recent content in prometheus on FeixiangFu</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><copyright>© 2024 FeixiangFu</copyright><lastBuildDate>Fri, 08 Nov 2019 19:53:19 +0800</lastBuildDate><atom:link href="https://fufeixiang.com/tags/prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>高可用prometheus监控集群搭建(四)</title><link>https://fufeixiang.com/2019/11/k8s-prometheus-4/</link><pubDate>Fri, 08 Nov 2019 19:53:19 +0800</pubDate><guid>https://fufeixiang.com/2019/11/k8s-prometheus-4/</guid><description>Prometheus可以定义警报规则，满足条件时触发警报，并推送到Alertmanager服务。Alertmanager支持高可用的集群部署，负责管理、整合和分发警报到不通目的地，并能做到告警收敛 本例采用statefulset方式部署3个实例的Alertmanager高可用集群
Alertmanager集群部署 # 创建alertmanager数据目录 # $ mkdir /data/alertmanager 创建storageclass # $ cat storageclass.yaml apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: alertmanager-lpv provisioner: kubernetes.io/no-provisioner volumeBindingMode: WaitForFirstConsumer 创建local volume # $ cat pv.</description></item><item><title>高可用prometheus监控集群搭建(三)</title><link>https://fufeixiang.com/2019/11/k8s-prometheus-3/</link><pubDate>Fri, 08 Nov 2019 14:53:19 +0800</pubDate><guid>https://fufeixiang.com/2019/11/k8s-prometheus-3/</guid><description>&lt;blockquote>
&lt;p>Prometheus的联邦模式，支持了集群的分层扩展及跨服务扩展。
&lt;code>分层扩展&lt;/code>允许Prometheus扩展到多数据中心、大规模主机集群，树型拓扑
&lt;code>跨服务扩展&lt;/code>是不同类别的监控指标项由不同的prometheus server分别收集
在多k8s集群模式下，每个集群部署prometheus server用于收集该集群相关指标,借助prometheus联邦模式，实现监控数据的统一收集展现及告警通知&lt;/p>
&lt;/blockquote></description></item><item><title>高可用prometheus监控集群搭建(二)</title><link>https://fufeixiang.com/2019/11/k8s-prometheus-2/</link><pubDate>Wed, 06 Nov 2019 19:23:19 +0800</pubDate><guid>https://fufeixiang.com/2019/11/k8s-prometheus-2/</guid><description>&lt;blockquote>
&lt;p>Prometheus使用exporter工具来暴露主机和应用程序上的指标，目前有很多可用于各种目的的exporter(&lt;a href="https://prometheus.io/docs/instrumenting/exporters/" target="_blank">
https://prometheus.io/docs/instrumenting/exporters/&lt;/a>)&lt;/p>
&lt;/blockquote></description></item><item><title>高可用prometheus监控集群搭建(一)</title><link>https://fufeixiang.com/2019/11/k8s-prometheus-1/</link><pubDate>Wed, 06 Nov 2019 16:23:19 +0800</pubDate><guid>https://fufeixiang.com/2019/11/k8s-prometheus-1/</guid><description>简介 # Prometheus是一个开源的监控系统，通过抓取或拉取应用程序中暴露的时间序列数据来工作。时间序列数据通常由应用程序本身通过客户端库或者成为exporter的代理来作为HTTP端点暴露。目前已经存在很多exporter和客户端库，支持多种编程语言、框架和开源应用程序。
官方架构图 # Prometheus通过配置target，来抓取对应主机、进程、服务或应用程序的指标。一组具有相同角色的target被称为job。比如，定义kubernetes-nodes的job，来抓取集群所有主机的相关指标 服务发现（target） 静态资源列表 基于文件的发现，可使用自动化配置管理工具自动更新 自动发现，支持基于AWS/Consul/dns/kubernetes/marathon等的服务发现 Prometheus将收集时间序列数据存储在本地，也可以配置remote_write存储到其它时间序列数据库，比如OpenTSDB、InfluxDB、M3DB等 可视化: Prometheus内置了web UI，也可以和功能强大的开源仪表板Grafana集成，可自定义dashboard满足各种定制化需求 聚合和告警: Prometheus可以查询和聚合时间序列数据，并创建规则来记录常用的查询和聚合。还可以定义警报规则，满足条件时触发警报，并推送到Alertmanager服务。Alertmanagr支持高可用的集群部署，负责管理、整合和分发警报到不通目的地，并能做到告警收敛 数据模型 # Prometheus使用一个多维时间序列数据模型，结合了时间序列名称和称为标签(label)的键/值对，这些标签提供了维度。每个时间序列由时间序列名称和标签的组合唯一标识。 &amp;lt;time series name&amp;gt; {&amp;lt;label name&amp;gt;=&amp;lt;label value&amp;gt;,...}
machine_cpu_cores{beta_kubernetes_io_arch=&amp;ldquo;amd64&amp;rdquo;,beta_kubernetes_io_os=&amp;ldquo;linux&amp;rdquo;,instance=&amp;ldquo;192.168.1.51&amp;rdquo;,job=&amp;ldquo;kubernetes-cadvisor&amp;rdquo;,kubernetes_io_arch=&amp;ldquo;amd64&amp;rdquo;,kubernetes_io_hostname=&amp;ldquo;192.168.1.51&amp;rdquo;,kubernetes_io_os=&amp;ldquo;linux&amp;rdquo;} 2 machine_cpu_cores收集的是主机的cpu核数，taget label标识了是job kubernetes-cadvisor抓取的，instance 192.</description></item></channel></rss>