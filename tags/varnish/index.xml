<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Varnish on FeixiangFu</title><link>https://fufeixiang.com/tags/varnish/</link><description>Recent content in Varnish on FeixiangFu</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><copyright>© 2024 FeixiangFu</copyright><lastBuildDate>Sun, 10 Sep 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://fufeixiang.com/tags/varnish/index.xml" rel="self" type="application/rss+xml"/><item><title>varnish缓存服务器的配置</title><link>https://fufeixiang.com/2017/09/varnish/</link><pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2017/09/varnish/</guid><description>Varnish简介 # Varnish是一款高性能且开源的反向代理服务器和 HTTP 加速器，支持采用基于linux系统内存的缓存服务器。
varnish的系统架构如下图：
varnish是主要运行两个进程：Management进程和Child进程(也叫Cache进程)，基于 epoll机制的单进程多线程架构 Management进程类似于nginx中的master,主要实现 编译VCL并应用新配置(通知子进程);监控varnish格子进程运行状态，初始化varnish; 提供一个CLI接口(命令行接口)指挥管理进程 等。Management进程会每隔几秒钟探测一下Child进程以判断其是否正常运行，如果在指定的时长内未得到Child进程的回应，Management将会重启此Child进程。 Child进程包含多种类型的线程，常见的如： Acceptor线程：接收新的连接请求并响应 Worker线程：child进程会为每个会话启动一个worker线程，因此，在高并发的场景中可能会出现数百个worker线程甚至更多 Expiry线程：从缓存中清理过期内容 varnish通过使用VCL(Varnish Configuration Language )配置缓存系统的缓存策略，VCL编译器调用C编译器,C编译器编译配置文件为二进制文件并连接至child进程。 VCL语法格式
(1)//、#或/* comment */用于注释 (2)sub $name 定义函数 (3)不支持循环，有内置变量 (4)使用终止语句，没有返回值 (5)域专用 (6)操作符：=(赋值)、==(等值比较)、~(模式匹配)、!</description></item></channel></rss>